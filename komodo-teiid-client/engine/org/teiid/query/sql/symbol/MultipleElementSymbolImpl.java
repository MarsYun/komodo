/* Generated By:JJTree: Do not edit this line. MultipleElementSymbol.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.query.sql.symbol;

import java.util.LinkedList;
import java.util.List;

import org.komodo.spi.query.sql.symbol.MultipleElementSymbol;
import org.teiid.query.parser.TCLanguageVisitorImpl;
import org.teiid.query.parser.TeiidClientParser;
import org.teiid.query.parser.TeiidNodeFactory.ASTNodes;
import org.teiid.query.sql.lang.SimpleNode;

/**
 *
 */
public class MultipleElementSymbolImpl extends SimpleNode
    implements BaseExpression, MultipleElementSymbol<ElementSymbolImpl, TCLanguageVisitorImpl> {

    private List<ElementSymbolImpl> elementSymbols;

    private GroupSymbolImpl group;

    /**
     * @param p
     * @param id
     */
    public MultipleElementSymbolImpl(TeiidClientParser p, int id) {
        super(p, id);
    }

    /**
     * @return name
     */
    public String getName() {
        return this.group.getName();   
    }

    /** 
     * @param name New name
     */
    public void setName(String name) {
        this.group = this.parser.createASTNode(ASTNodes.GROUP_SYMBOL);
        this.group.setName(name);
    }

    /**
     * @return null if selecting all groups, otherwise the specific group
     */
    public GroupSymbolImpl getGroup() {
        return group;
    }
    
    /**
     * @param group
     */
    public void setGroup(GroupSymbolImpl group) {
        this.group = group;
    }

    /**
     * Get the element symbols referred to by this multiple element symbol
     * @return List of {@link ElementSymbolImpl}s, may be null
     */
    @Override
    public List<ElementSymbolImpl> getElementSymbols(){
        return this.elementSymbols;
    }

    /**
     * Add an element symbol referenced by this multiple element symbol
     * @param symbol Element symbol referenced by this multiple element symbol
     */
    public void addElementSymbol(ElementSymbolImpl symbol) {
        if(getElementSymbols() == null) { 
            setElementSymbols(new LinkedList<ElementSymbolImpl>());
        }
        getElementSymbols().add(symbol);
    }

    /**
     * Set the {@link ElementSymbolImpl}s that this symbol refers to
     * @param elementSymbols List of {@link ElementSymbolImpl}
     */
    public void setElementSymbols(List<ElementSymbolImpl> elementSymbols){
        this.elementSymbols = elementSymbols;
    }

    @Override
    public Class<?> getType() {
        return null;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.elementSymbols == null) ? 0 : this.elementSymbols.hashCode());
        result = prime * result + ((this.group == null) ? 0 : this.group.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        MultipleElementSymbolImpl other = (MultipleElementSymbolImpl)obj;
        if (this.elementSymbols == null) {
            if (other.elementSymbols != null) return false;
        } else if (!this.elementSymbols.equals(other.elementSymbols)) return false;
        if (this.group == null) {
            if (other.group != null) return false;
        } else if (!this.group.equals(other.group)) return false;
        return true;
    }

    /** Accept the visitor. **/
    @Override
    public void acceptVisitor(TCLanguageVisitorImpl visitor) {
        visitor.visit(this);
    }

    @Override
    public MultipleElementSymbolImpl clone() {
        MultipleElementSymbolImpl clone = new MultipleElementSymbolImpl(this.parser, this.id);

        if(getGroup() != null)
            clone.setGroup(getGroup().clone());
        if(getElementSymbols() != null)
            clone.setElementSymbols(cloneList(getElementSymbols()));

        return clone;
    }

}
/* JavaCC - OriginalChecksum=ac341c6477c55c5715d1a766627e0a4c (do not edit this line) */
