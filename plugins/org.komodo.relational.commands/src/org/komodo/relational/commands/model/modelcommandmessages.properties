# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

### ModelCommandProvider commands
General.INVALID_MODEL_TYPE_PROPERTY_VALUE = The value of the model type property "{0}" is invalid.
General.MISSING_PUSHDOWN_FUNCTION_NAME = A Pushdown Function requires a name.
General.MISSING_SOURCE_NAME = A Source requires a name.
General.MISSING_STORED_PROCEDURE_NAME = A Stored Procedure requires a name.
General.MISSING_TABLE_NAME = An Table requires a name.
General.MISSING_USER_DEFINED_FUNCTION_NAME = A User Defined Function requires a name.
General.MISSING_VIEW_NAME = A View requires a name.
General.MISSING_VIRTUAL_PROCEDURE_NAME = A Virtual Procedure requires a name.

### ModelCommandProvider commands
AddPushdownFunctionCommand.usage=add-pushdown-function <function-name>
AddPushdownFunctionCommand.help=\t{0} - creates a Pushdown Function in a Model.
AddPushdownFunctionCommand.examples= \
\t add-pushdown-function functionToAdd
AddPushdownFunctionCommand.PUSHDOWN_FUNCTION_ADDED=Pushdown Function "{0}" was successfully added.

AddSourceCommand.usage=add-source <source-name>
AddSourceCommand.help=\t{0} - creates a Source in a Model.
AddSourceCommand.examples= \
\t add-source sourceToAdd
AddSourceCommand.SOURCE_ADDED=Source "{0}" was successfully added.

AddStoredProcedureCommand.usage=add-stored-procedure <procedure-name>
AddStoredProcedureCommand.help=\t{0} - creates a Stored Procedure in a Model.
AddStoredProcedureCommand.examples= \
\t add-stored-procedure procedureToAdd
AddStoredProcedureCommand.STORED_PROCEDURE_ADDED=Stored Procedure "{0}" was successfully added.

AddTableCommand.usage=add-table <table-name>
AddTableCommand.help=\t{0} - creates a Table in a Model.
AddTableCommand.examples= \
\t add-table tableToAdd
AddTableCommand.TABLE_ADDED=Table "{0}" was successfully added.

AddUserDefinedFunctionCommand.usage=add-user-defined-function <function-name>
AddUserDefinedFunctionCommand.help=\t{0} - creates a User Defined Function in a Model.
AddUserDefinedFunctionCommand.examples= \
\t add-user-defined-function functionToAdd
AddUserDefinedFunctionCommand.USER_DEFINED_FUNCTION_ADDED=User Defined Function "{0}" was successfully added.

AddViewCommand.usage=add-view <view-name>
AddViewCommand.help=\t{0} - creates a View in a Model.
AddViewCommand.examples= \
\t add-view viewToAdd
AddViewCommand.VIEW_ADDED=View "{0}" was successfully added.

AddVirtualProcedureCommand.usage=add-virtual-procedure <procedure-name>
AddVirtualProcedureCommand.help=\t{0} - creates a Virtual Procedure in a Model.
AddVirtualProcedureCommand.examples= \
\t add-virtual-procedure procedureToAdd
AddVirtualProcedureCommand.VIRTUAL_PROCEDURE_ADDED=Virtual Procedure "{0}" was successfully added.

DeletePushdownFunctionCommand.usage=delete-pushdown-function <procedure-name>
DeletePushdownFunctionCommand.help=\t{0} - deletes a Pushdown Function from a Model.
DeletePushdownFunctionCommand.examples= \
\t delete-pushdown-function functionToDelete
DeletePushdownFunctionCommand.PUSHDOWN_FUNCTION_DELETED=Pushdown Function "{0}" was successfully deleted.

DeleteSourceCommand.usage=delete-source <source-name>
DeleteSourceCommand.help=\t{0} - deletes a Source from a Model.
DeleteSourceCommand.examples= \
\t delete-source sourceToDelete
DeleteSourceCommand.SOURCE_DELETED=Source "{0}" was successfully deleted.

DeleteStoredProcedureCommand.usage=delete-stored-procedure <procedure-name>
DeleteStoredProcedureCommand.help=\t{0} - deletes a Stored Procedure from a Model.
DeleteStoredProcedureCommand.examples= \
\t delete-stored-procedure procedureToDelete
DeleteStoredProcedureCommand.STORED_PROCEDURE_DELETED=Stored Procedure "{0}" was successfully deleted.

DeleteTableCommand.usage=delete-table <table-name>
DeleteTableCommand.help=\t{0} - deletes a Table from a Model.
DeleteTableCommand.examples= \
\t delete-table tableToDelete
DeleteTableCommand.TABLE_DELETED=Table "{0}" was successfully deleted.

DeleteUserDefinedFunctionCommand.usage=delete-user-defined-function <function-name>
DeleteUserDefinedFunctionCommand.help=\t{0} - deletes a User Defined Function from a Model.
DeleteUserDefinedFunctionCommand.examples= \
\t delete-user-defined-function functionToDelete
DeleteUserDefinedFunctionCommand.USER_DEFINED_FUNCTION_DELETED=User Defined Function "{0}" was successfully deleted.

DeleteViewCommand.usage=delete-view <view-name>
DeleteViewCommand.help=\t{0} - deletes a View from a Model.
DeleteViewCommand.examples= \
\t delete-view viewToDelete
DeleteViewCommand.VIEW_DELETED=View "{0}" was successfully deleted.

DeleteVirtualProcedureCommand.usage=delete-virtual-procedure <procedure-name>
DeleteVirtualProcedureCommand.help=\t{0} - deletes a Virtual Procedure from a Model.
DeleteVirtualProcedureCommand.examples= \
\t delete-virtual-procedure procedureToDelete
DeleteVirtualProcedureCommand.VIRTUAL_PROCEDURE_DELETED=Virtual Procedure "{0}" was successfully deleted.

UnsetModelPropertyCommand.examples = \
\t unset-property modelType
UnsetModelPropertyCommand.usage = unset-property <property-name>
UnsetModelPropertyCommand.help=\t{0} - either removes the model property or sets it back to its default value.

SetModelPropertyCommand.usage=set-property <property-name> <new-value>
SetModelPropertyCommand.help=\t{0} - sets a Model property value.
SetModelPropertyCommand.examples= \
\t set-property visible false

ExportCommand.usage=export-ddl <file-path> [override]
ExportCommand.help=\t{0} - exports the Model DDL to a local file.
ExportCommand.examples= \
\t export-ddl /Users/me/outputDdl.ddl
\t export-ddl /Users/me/outputDdl.ddl true
ExportCommand.DDL_EXPORTED = Model "{0}" was successfully exported to "{1}" with override flag of "{2}"

ImportCommand.usage=import-ddl <file-path>
ImportCommand.help=\t{0} - imports DDL from a local file.
ImportCommand.examples= \
\t import-ddl /Users/me/myDdl.ddl
\t import-ddl /Users/me/myDdl.ddl
ImportCommand.DDL_IMPORTED = DDL "{0}" was successfully imported from "{1}"
ImportCommand.DdlImportInProgressMsg=Importing the DDL from file "{0}"...
ImportCommand.DdlImportSuccessMsg=Successfully imported DDL from file {0}.
ImportCommand.ImportFailedMsg=\nFailed to import from file {0}.
ImportCommand.childTypeNotAllowed=The object type "{0}" is not allowed as a child of "{1}".
ImportCommand.InvalidDDLParentType=Invalid parent type - can only import DDL into a Model or Schema.
ImportCommand.ErrorCreatingTempNode=Could not create the temporary import node "{0}".
ImportCommand.DeleteTempContextFailedMsg=Error deleting the temporary import node "{0}".
ImportCommand.cannotImport_wouldCreateDuplicate=Cannot import "{0}" - a "{1}" with that name already exists.

ShowPushdownFunctionsCommand.usage = show-pushdown-functions
ShowPushdownFunctionsCommand.help = \t{0} - lists the pushdown functions found in a model.
ShowPushdownFunctionsCommand.examples = \
\t show-pushdown-functions
ShowPushdownFunctionsCommand.NO_PUSHDOWN_FUNCTIONS = There are no pushdown functions defined in model "{0}".
ShowPushdownFunctionsCommand.PUSHDOWNS_HEADER = Pushdown Functions in model "{0}":

ShowSourcesCommand.usage = show-sources
ShowSourcesCommand.help = \t{0} - lists the sources found in a model.
ShowSourcesCommand.examples = \
\t show-sources
ShowSourcesCommand.NO_SOURCES = There are no sources defined in model "{0}".
ShowSourcesCommand.SOURCES_HEADER = Sources in model "{0}":

ShowStoredProceduresCommand.usage = show-stored-procedures
ShowStoredProceduresCommand.help = \t{0} - lists the stored procedures found in a model.
ShowStoredProceduresCommand.examples = \
\t show-stored-procedures
ShowStoredProceduresCommand.NO_STORED_PROCEDURES = There are no stored procedures defined in model "{0}".
ShowStoredProceduresCommand.STORED_PROCEDURES_HEADER = Stored procedures in model "{0}":

ShowTablesCommand.usage = show-tables
ShowTablesCommand.help = \t{0} - lists the tables found in a model.
ShowTablesCommand.examples = \
\t show-tables
ShowTablesCommand.NO_TABLES = There are no tables defined in model "{0}".
ShowTablesCommand.TABLES_HEADER = Tables in model "{0}":

ShowUserDefinedFunctionsCommand.usage = show-user-defined-functions
ShowUserDefinedFunctionsCommand.help = \t{0} - lists the user-defined functions found in a model.
ShowUserDefinedFunctionsCommand.examples = \
\t show-user-defined-functions
ShowUserDefinedFunctionsCommand.NO_USER_DEFINED_FUNCTIONS = There are no user-defined functions defined in model "{0}".
ShowUserDefinedFunctionsCommand.USER_DEFINED_FUNCTIONS_HEADER = User-defined functions in model "{0}":

ShowViewsCommand.usage = show-views
ShowViewsCommand.help = \t{0} - lists the views found in a model.
ShowViewsCommand.examples = \
\t show-views
ShowViewsCommand.NO_VIEWS = There are no views defined in model "{0}".
ShowViewsCommand.VIEWS_HEADER = Views in model "{0}":

ShowVirtualProceduresCommand.usage = show-virtual-procedures
ShowVirtualProceduresCommand.help = \t{0} - lists the virtual procedures found in a model.
ShowVirtualProceduresCommand.examples = \
\t show-virtual-procedures
ShowVirtualProceduresCommand.NO_VIRTUAL_PROCEDURES = There are no virtual procedures defined in model "{0}".
ShowVirtualProceduresCommand.VIRTUAL_PROCEDURES_HEADER = Virtual procedures in model "{0}":
