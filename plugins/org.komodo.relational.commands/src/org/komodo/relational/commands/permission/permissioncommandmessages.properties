# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

### PermissionCommandProvider commands
General.MISSING_CONDITION_NAME = A condition requires a name.
General.MISSING_MASK_NAME = A mask requires a name.

### 
AddConditionCommand.usage=add-condition <condition-name>
AddConditionCommand.help=\t{0} - creates a Condition in a Permission.
AddConditionCommand.examples= \
\t add-condition conditionToAdd
AddConditionCommand.CONDITION_ADDED=Condition "{0}" was successfully added.

DeleteConditionCommand.usage=delete-condition <condition-name>
DeleteConditionCommand.help=\t{0} - deletes a Condition from a Permission.
DeleteConditionCommand.examples= \
\t delete-condition conditionToDelete
DeleteConditionCommand.CONDITION_DELETED=Condition "{0}" was successfully deleted.

AddMaskCommand.usage=add-mask <mask-name>
AddMaskCommand.help=\t{0} - creates a Mask in a Permission.
AddMaskCommand.examples= \
\t add-mask maskToAdd
AddMaskCommand.MASK_ADDED=Mask "{0}" was successfully added.

DeleteMaskCommand.usage=delete-mask <mask-name>
DeleteMaskCommand.help=\t{0} - deletes a Mask from a Permission.
DeleteMaskCommand.examples= \
\t delete-mask maskToDelete
DeleteMaskCommand.MASK_DELETED=Mask "{0}" was successfully deleted.

UnsetPermissionPropertyCommand.examples = \
\t unset-property allowAlter
UnsetPermissionPropertyCommand.usage = unset-property <property-name>
UnsetPermissionPropertyCommand.help=\t{0} - either removes the permission property or sets it back to its default value.

SetPermissionPropertyCommand.usage=set-property <property-name> <new-value>
SetPermissionPropertyCommand.help=\t{0} - sets a Permission property value.
SetPermissionPropertyCommand.examples= \
\t set-property allow-create false

ShowConditionsCommand.usage = show-conditions
ShowConditionsCommand.help = \t{0} - lists the conditions found in a model.
ShowConditionsCommand.examples = \
\t show-conditions
ShowConditionsCommand.CONDITIONS_HEADER = Conditions in model "{0}":
ShowConditionsCommand.NO_CONDITIONS = There are no conditions defined in model "{0}".

ShowMasksCommand.usage = show-masks
ShowMasksCommand.help = \t{0} - lists the masks found in a model.
ShowMasksCommand.examples = \
\t show-masks
ShowMasksCommand.MASKS_HEADER = Masks in model "{0}":
ShowMasksCommand.NO_MASKS = There are no masks defined in model "{0}".
