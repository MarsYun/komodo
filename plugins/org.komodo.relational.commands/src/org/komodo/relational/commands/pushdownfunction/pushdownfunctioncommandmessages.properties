# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

### PushdownFunctionCommandProvider commands
General.MISSING_PARAMETER_NAME = A Parameter requires a name.
General.MISSING_RESULT_SET_TYPE=The ResultSet type is required.
General.INVALID_DETERMINISTIC_PROPERTY_VALUE=The value of the deterministic property "{0}" is invalid.
General.INVALID_SCHEMA_ELEMENT_TYPE_PROPERTY_VALUE=The value of the schema-element-type property "{0}" is invalid.

### 
SetResultSetCommand.usage=set-result-set <resultSet type>
SetResultSetCommand.help=\t{0} - sets the type of ResultSet.
SetResultSetCommand.examples= \
\t set-result-set TabularResultSet \
\t set-result-set DataTypeResultSet
SetResultSetCommand.RESULT_SET_TYPE_SET=ResultSet of type "{0}" was successfully set.

RemoveResultSetCommand.usage=remove-result-set 
RemoveResultSetCommand.help=\t{0} - removes the ResultSet from the PushdownFunction
RemoveResultSetCommand.examples= \
\t remove-result-set
RemoveResultSetCommand.RESULT_SET_REMOVED=The ResultSet was successfully removed.

AddParameterCommand.usage=add-pf-parameter <parameter-name>
AddParameterCommand.help=\t{0} - creates a Parameter in a PushdownFunction.
AddParameterCommand.examples= \
\t add-pf-parameter paramToAdd
AddParameterCommand.PARAMETER_ADDED=Parameter "{0}" was successfully added.

DeleteParameterCommand.usage=delete-pf-parameter <parameter-name>
DeleteParameterCommand.help=\t{0} - deletes a Parameter from a PushdownFunction.
DeleteParameterCommand.examples= \
\t delete-pf-parameter paramToDelete
DeleteParameterCommand.PARAMETER_DELETED=Parameter "{0}" was successfully deleted.

UnsetPushdownFunctionPropertyCommand.examples = \
\t unset-property allowsDistinct
UnsetPushdownFunctionPropertyCommand.usage = unset-property <property-name>
UnsetPushdownFunctionPropertyCommand.help=\t{0} - either removes the pushdown function property or sets it back to its default value.

SetPushdownFunctionPropertyCommand.usage=set-property <property-name> <new-value>
SetPushdownFunctionPropertyCommand.help=\t{0} - sets a Pushdown Function property value.
SetPushdownFunctionPropertyCommand.examples= \
\t set-property null-on-null false
### 
