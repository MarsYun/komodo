# JBoss, Home of Professional Open Source.
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership. Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301 USA.

### TableCommandProvider commands
General.MISSING_ACCESS_PATTERN_NAME = An AccessPattern requires a name.
General.MISSING_COLUMN_NAME = A Column requires a name.
General.MISSING_FOREIGN_KEY_NAME = A ForeignKey requires a name.
General.MISSING_PRIMARY_KEY_NAME = A PrimaryKey requires a name.
General.MISSING_INDEX_NAME = An Index requires a name.
General.MISSING_UNIQUE_CONSTRAINT_NAME = A UniqueConstraint requires a name.
General.INVALID_ON_COMMIT_PROPERTY_VALUE = The value of the onCommitValue property "{0}" is invalid.
General.INVALID_SCHEMA_ELEMENT_TYPE_PROPERTY_VALUE = The value of the schemaElementType property "{0}" is invalid.
General.INVALID_TEMPORARY_TABLE_TYPE_PROPERTY_VALUE = The value of the temporaryTableType property "{0}" is invalid.

### 
AddAccessPatternCommand.usage=add-access-pattern <pattern-name>
AddAccessPatternCommand.help=\t{0} - creates an AccessPattern in a Table.
AddAccessPatternCommand.examples= \
\t add-access-pattern accessPatternToAdd
AddAccessPatternCommand.ACCESS_PATTERN_ADDED=AccessPattern "{0}" was successfully added.

AddColumnCommand.usage=add-column <column-name>
AddColumnCommand.help=\t{0} - creates a Column in a Table.
AddColumnCommand.examples= \
\t add-column columnToAdd
AddColumnCommand.COLUMN_ADDED=Column "{0}" was successfully added.

AddForeignKeyCommand.usage=add-ForeignKey <ForeignKey-name> <pathToTableReference>
AddForeignKeyCommand.help=\t{0} - creates a ForeignKey in a Table.
AddForeignKeyCommand.examples= \
\t add-ForeignKey ForeignKeyToAdd /workspace/myVdb/aTable
AddForeignKeyCommand.FOREIGN_KEY_ADDED=ForeignKey "{0}" was successfully added.
AddForeignKeyCommand.INVALID_TABLE_PATH = The "{0}" path is not a valid table path.
AddForeignKeyCommand.MISSING_FOREIGN_KEY_TABLE_REF_PATH = An absolute path to the foreign key's table reference is required.

AddIndexCommand.usage=add-index <index-name>
AddIndexCommand.help=\t{0} - creates an Index in a Table.
AddIndexCommand.examples= \
\t add-index indexToAdd
AddIndexCommand.INDEX_ADDED=Index "{0}" was successfully added.

AddUniqueConstraintCommand.usage=add-unique-constraint <constraint-name>
AddUniqueConstraintCommand.help=\t{0} - creates a UniqueConstraint in a Table.
AddUniqueConstraintCommand.examples= \
\t add-unique-constraint constraintToAdd
AddUniqueConstraintCommand.UNIQUE_CONSTRAINT_ADDED=UniqueConstraint "{0}" was successfully added.

AddPrimaryKeyCommand.usage=add-primary-key <pk-name>
AddPrimaryKeyCommand.help=\t{0} - creates a PrimaryKey in a Table.
AddPrimaryKeyCommand.examples= \
\t add-primary-key myPk
AddPrimaryKeyCommand.PK_EXISTS_CANT_ADD=Table already has a PrimaryKey - "{0}" cannot be added.
AddPrimaryKeyCommand.PRIMARY_KEY_ADDED=PrimaryKey "{0}" was successfully added.

DeleteAccessPatternCommand.usage=delete-access-pattern <pattern-name>
DeleteAccessPatternCommand.help=\t{0} - deletes an AccessPattern from a Table.
DeleteAccessPatternCommand.examples= \
\t delete-access-pattern patternToDelete
DeleteAccessPatternCommand.ACCESS_PATTERN_DELETED=AccessPattern "{0}" was successfully deleted.

DeleteColumnCommand.usage=delete-column <column-name>
DeleteColumnCommand.help=\t{0} - deletes a Column from a Table.
DeleteColumnCommand.examples= \
\t delete-column columnToDelete
DeleteColumnCommand.COLUMN_DELETED=Column "{0}" was successfully deleted.

DeleteForeignKeyCommand.usage=delete-foreign-key <foreignKey-name>
DeleteForeignKeyCommand.help=\t{0} - deletes a ForeignKey from a Table.
DeleteForeignKeyCommand.examples= \
\t delete-foreign-key fkToDelete
DeleteForeignKeyCommand.FOREIGN_KEY_DELETED=ForeignKey "{0}" was successfully deleted.

DeleteIndexCommand.usage=delete-index <index-name>
DeleteIndexCommand.help=\t{0} - deletes an Index from a Table.
DeleteIndexCommand.examples= \
\t delete-index indexToDelete
DeleteIndexCommand.INDEX_DELETED=Index "{0}" was successfully deleted.

DeleteUniqueConstraintCommand.usage=delete-unique-constraint <uc-name>
DeleteUniqueConstraintCommand.help=\t{0} - deletes a UniqueConstraint from a Table.
DeleteUniqueConstraintCommand.examples= \
\t delete-unique-constraint ucToDelete
DeleteUniqueConstraintCommand.UNIQUE_CONSTRAINT_DELETED=UniqueConstraint "{0}" was successfully deleted.

DeletePrimaryKeyCommand.usage=delete-primary-key
DeletePrimaryKeyCommand.help=\t{0} - deletes the PrimaryKey from a Table.
DeletePrimaryKeyCommand.examples= \
\t delete-primary-key
DeletePrimaryKeyCommand.NO_PK_TO_REMOVE=The table does not have a PrimaryKey.
DeletePrimaryKeyCommand.PRIMARY_KEY_DELETED=PrimaryKey was successfully deleted.

UnsetTablePropertyCommand.examples = \
\t unset-property nameInSource
UnsetTablePropertyCommand.usage = unset-property <property-name>
UnsetTablePropertyCommand.help=\t{0} - either removes the table property or sets it back to its default value.

SetTablePropertyCommand.usage=set-property <property-name> <new-value>
SetTablePropertyCommand.help=\t{0} - sets a Table property value.
SetTablePropertyCommand.examples= \
\t set-property updatable false

ShowAccessPatternsCommand.usage = show-access-patterns
ShowAccessPatternsCommand.help = \t{0} - lists the access patterns found in a table.
ShowAccessPatternsCommand.examples = \
\t show-access-patterns
ShowAccessPatternsCommand.ACCESS_PATTERNS_HEADER = Access patterns in model "{0}":
ShowAccessPatternsCommand.NO_ACCESS_PATTERNS = There are no access patterns defined in model "{0}".

ShowColumnsCommand.usage = show-columns
ShowColumnsCommand.help = \t{0} - lists the columns found in a table.
ShowColumnsCommand.examples = \
\t show-columns
ShowColumnsCommand.COLUMNS_HEADER = Columns in model "{0}":
ShowColumnsCommand.NO_COLUMNS = There are no columns defined in model "{0}".

ShowIndexesCommand.usage = show-indexes
ShowIndexesCommand.help = \t{0} - lists the indexes found in a table.
ShowIndexesCommand.examples = \
\t show-indexes
ShowIndexesCommand.INDEXES_HEADER = Indexes in model "{0}":
ShowIndexesCommand.NO_INDEXES = There are no indexes defined in model "{0}".

ShowUniqueConstraintsCommand.usage = show-unique-constraints
ShowUniqueConstraintsCommand.help = \t{0} - lists the unique constraints found in a table.
ShowUniqueConstraintsCommand.examples = \
\t show-unique-constraints
ShowUniqueConstraintsCommand.NO_UNIQUE_CONSTRAINTS = There are no unique constraints defined in model "{0}".
ShowUniqueConstraintsCommand.UNIQUE_CONSTRAINTS_HEADER = Unique constraints in model "{0}":
