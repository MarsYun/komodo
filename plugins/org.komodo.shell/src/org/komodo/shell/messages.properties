# Generic Messages for command-specific messages 
# Must use the 'dot' notation below, e.g. <commandName>.usage

# AddConstraintColumnCommand
AddConstraintColumnCommand.examples= \
\t add-column /workspace/MyVdb/MyModel/MyTable/MyColumn
AddConstraintColumnCommand.usage = add-column <column_path>
AddConstraintColumnCommand.help = adds a column reference to the table constraint (i.e., primary key, unique constraint, access pattern, foreign key, or index). \n\n \
\tNote 1: Use the "find Column" command to find the paths of columns in your workspace.\n \
\tNote 2: You can also use tab completion to get a list of the column paths.
AddConstraintColumnCommand.columnRefAdded = The reference to the column at "{0}" has been added to the table constraint "{1}".
AddConstraintColumnCommand.columnPathNotFound = The specified column path of "{0}" cannot be found in the workspace. Use the "find Column" command to find column paths.
AddConstraintColumnCommand.error = Failed to add column to the constraint. {0}
AddConstraintColumnCommand.invalidColumnPath = The path at "{0}" is not a path to a column.
AddConstraintColumnCommand.missingColumnPathArg = Please specify the workspace path of the column you wish to reference in this constraint.

# BuiltInCommand
BuiltInShellCommand.locationArg_noContextWithThisName=The specified path "{0}" is not valid
BuiltInShellCommand.propertyArg_noPropertyWithThisName=The property "{0}" is not valid or cannot be modified
BuiltInShellCommand.locationArg_empty=path arg is empty.
BuiltInShellCommand.typeArg_childTypeNotAllowed=The object type "{0}" is invalid, or not allowed as a child of "{1}".
BuiltInShellCommand.objectNameNotValid=The name "{0}" is not valid
BuiltInShellCommand.FileNotFound=The specified file "{0}" was not found.
BuiltInShellCommand.FileArgNotAFile=The specified file argument "{0}" is not a file.
BuiltInShellCommand.FileCannotRead=Cannot read the specified file "{0}".

# CdCommand
CdCommand.examples= \
\t cd .. \n \
\t cd myVdb \n \
\t cd /myVdb/myDataRole
CdCommand.usage=cd <path>
CdCommand.help=change the current workspace context.

# CreateCommand
CreateCommand.examples= \
\t create TABLE myTable \n \
\t create VDB myVdb /my/folder/MyVdb.vdb \n \
\t create ForeignKey fk /path/to/referenced/table /path/to/owning/table
CreateCommand.usage = \
create <object_type> [object_name] [args] [parent_path] \n \
\t create VdbEntry <entry_name> <entry_path> [parent_path] \n \
\t create ForeignKey <fk_name> <table_ref_path> [parent_path] \n \
\t create VdbTranslator <translator_name> <translator_type> [parent_path]
CreateCommand.help=create new items.
CreateCommand.DEFAULT_VDB_FILE_PATH = <not available>
CreateCommand.FAILURE = FAILED to create the {0}. {1}
CreateCommand.MISSING_ENTRY_PATH = Please specify the entry path.
CreateCommand.MISSING_FOREIGN_KEY_TABLE_REF = The tableRefPath is required - it specifies the table that the FK should reference.
CreateCommand.MISSING_OBJ_NAME = Please specify a name when creating a "{0}".
CreateCommand.MISSING_OBJ_TYPE = Please specify the type of object to create.
CreateCommand.MISSING_OPTION_VALUE = Please specify a statement option value.
CreateCommand.MISSING_TRANSLATOR_TYPE = Please specify the translator type.
CreateCommand.MISSING_PROPERTY_NAME = Please specify a name when creating a custom property.
CreateCommand.MISSING_PROPERTY_VALUE = Please specify a value for the custom property.
CreateCommand.PROPERTY_ALREADY_EXISTS = A custom property with name "{0}" already exists and cannot be created.
CreateCommand.NO_DUPLICATES_ALLOWED = An object with name "{0}" and type "{1}" already exists at the specified location.
CreateCommand.OBJECT_CREATED = Successfully created {0} "{1}".
CreateCommand.PROPERTY_CREATED = Successfully created property "{0}".
CreateCommand.PATH_NOT_FOUND = An object at path "{0}" could not be found.
CreateCommand.TOO_MANY_ARGS = FAILED to create the {0}. Too many arguments were used.
CreateCommand.TYPE_NOT_VALID = "{0}" is not a valid type that can be created.

# DeleteCommand
DeleteCommand.examples= \
\t delete myVdb \n \
\t delete myVdb/myDataRole \n \
\t rm /workspace/anotherVdb/modelA
DeleteCommand.usage=delete <object_path>
DeleteCommand.help=delete an object and all its children.
DeleteCommand.InvalidArgMsg_ObjectPath=Please specify the path of the object to delete.
DeleteCommand.ObjectDeleted=Successfully deleted "{0}"
DeleteCommand.Failure=FAILED to delete the {0}.
DeleteCommand.cannotDelete_objectDoesNotExist=Cannot delete. The object "{0}" does not exist
DeleteCommand.contextMustBeBelowCurrent=Cannot delete object "{0}" - it must be below the current object. 
DeleteCommand.cantDeleteReserved=Cannot delete object "{0}" - it is a reserved context.
DeleteCommand.cannotRename_objectDoesNotExist=Cannot rename. The object [{0}] does not exist

# DeployCommand
DeployCommand.examples= \
\t deploy \n \
\t deploy myVdb
DeployCommand.usage=deploy [vdb_name]
DeployCommand.help=deploy a VDB to the default Teiid instance. Either make the current context a VDB and execute this command with no arguments or make the current context a VDB's parent and specify the VDB name as the only argument.
DeployCommand.invalidName=The VDB name argument is invalid
DeployCommand.InvalidCommand=The VDB to be deployed cannot be determined. Either make the current context a vdb with no arguments or change to vdb's parent and specify its name as the command's argument
DeployCommand.exportFailure=The VDB failed to be exported
DeployCommand.noTeiidDefined=No Teiid instance is currently defined
DeployCommand.noTeiidConnection=A connection to the defined Teiid Instance cannot be established

# ExitCommand
ExitCommand.examples = \
\t exit \n \
\t quit
ExitCommand.usage = exit 
ExitCommand.help = exits VDB Builder.

# ExportCommand
ExportCommand.examples= \
\t export model_1 /home/output/model_1.ddl \n \
\t export my_vdb /home/output/my_vdb.xml
ExportCommand.usage=export <vdb | ddl> <object_path> <file_name>
ExportCommand.help=exports a VDB or model to a file.
ExportCommand.InvalidArgMsgSubCommand=Please specify a sub-command.
ExportCommand.InvalidArgMsgObjectName=Please specify the name of the object to export.
ExportCommand.InvalidArgMsgOutputFileName=Please specify the file name.
ExportCommand.Failure = Export command FAILED for "{0}".  Please ensure the object is valid, then retry.
ExportCommand.ObjectExported=Successfully exported "{0}" to "{1}" file
ExportCommand.NoContentExported=No content was exported from the object {0}
ExportCommand.ObjectNotAVdb=The supplied object "{0}" is not a VDB.
ExportCommand.CannotExportObjectDoesNotExist=Cannot export. The object [{0}] does not exist
ExportCommand.CannotExportObjectNotExportable=Cannot export.  The object [{0}] does not support export.
ExportCommand.CannotExportFileAlreadyExists=Cannot export. The file [{0}] already exists
ExportCommand.CannotExportProblemWithVdb=Problem with VDB. Could not export.
ExportCommand.CannotExportProblemWithModel=Problem with model. Could not export.
ExportCommand.CannotExportProblemWithSchema=Problem with schema. Could not export.
ExportCommand.ExportOfTypeNotSupported=Export of type "{0}" is currently not supported.

# FindCommand
FindCommand.examples= \
\t find Vdb \n \
\t find Model \n \
\t find VdbDataRole \n \
\t find Column \n \
\t find Column a* \n \
\t find Column test*
FindCommand.usage = find <object_type> [search pattern]
FindCommand.help = display the paths of workspace objects of a specified object type.
FindCommand.helpTypesHeading = The valid object types are the following:
FindCommand.Failure = Find command FAILED. {0}
FindCommand.MissingTypeArg = Please specify a valid object type for the search.
FindCommand.InvalidType = "{0}" is not a valid search type.
FindCommand.NoObjectsFound = There are no "{0}" objects in the workspace.
FindCommand.TypeHeader = Paths of the "{0}" objects found in the workspace:

# HelpCommand
HelpCommand.examples = \
\t help \n \
\t help cd \n \
\t man create
HelpCommand.usage = help [command_name] 
HelpCommand.help = display available commands or specific command information.

# HomeCommand
HomeCommand.examples= \
\t home
HomeCommand.usage=home
HomeCommand.help=changes the current context to the workspace root.

# ImportCommand
ImportCommand.examples= \
\t import ddl ./myFile.ddl myModel \n \
\t import vdb ./myVdb.xml
ImportCommand.usage=import <ddl | vdb> <file_name> [parent_path]
ImportCommand.help=import a DDL file or VDB file.  Note that importing DDL into a model or schema will replace existing content.
ImportCommand.InvalidArgMsg_SubCommand=Please specify a sub-command (model).
ImportCommand.InvalidArgMsg_FileName=Please specify a DDL file name.
ImportCommand.InvalidTargetPath=The supplied target path "{0}" is not valid.
ImportCommand.InvalidArgMsg_ModelName=Please specify a model name.
ImportCommand.DdlImportInProgressMsg=Importing the DDL from file "{0}"...
ImportCommand.VdbImportInProgressMsg=Importing the VDB file "{0}"...
ImportCommand.DdlImportSuccessMsg=Successfully imported DDL from file {0}.
ImportCommand.VdbImportSuccessMsg=Successfully imported VDB from file {0}.
ImportCommand.InvalidSubCommand=Invalid sub-command, must be "model" or "vdb".
ImportCommand.ImportFailedMsg=\nFailed to import from file {0}.
ImportCommand.childTypeNotAllowed=The object type "{0}" is not allowed as a child of "{1}".
ImportCommand.InvalidDDLParentType=Invalid parent type - can only import DDL into a Model or Schema.
ImportCommand.ErrorCreatingTempNode=Could not create the temporary import node "{0}".
ImportCommand.DeleteTempContextFailedMsg=Error deleting the temporary import node "{0}".
ImportCommand.cannotImport_wouldCreateDuplicate=Cannot import "{0}" - a "{1}" with that name already exists.

# ListCommand
ListCommand.examples= \
\t list \n \
\t ls \n \
\t ll
ListCommand.usage=list
ListCommand.help=display children of the current workspace context.

# NavigateCommand
NavigateCommand.examples= \
\t navigate
NavigateCommand.usage=navigate
NavigateCommand.help=display detailed repository information for all objects contained within \
	and under the current object. Used primarily for debug purposes and workspace exploration.

# PlayCommand
PlayCommand.examples= \
\t play /home/vdbuilder_commands/build_my_vdb.txt
PlayCommand.usage=play <file_name>
PlayCommand.help=execute commands defined in a specified text file.
PlayCommand.InvalidArgMsg_FileName=Please specify the command file name.
PlayCommand.fileExecuted=All commands in file {0} have been executed.
PlayCommand.Failure=Failed to execute all commands in file {0}
PlayCommand.CommandFailure=Failed to execute "{0}"

# RemoveConstraintColumnCommand
RemoveConstraintColumnCommand.examples= \
\t remove-column /workspace/MyVdb/MyModel/MyTable/MyColumn
RemoveConstraintColumnCommand.usage = remove-column <column_path>
RemoveConstraintColumnCommand.help = removes a column reference from the table constraint (i.e., primary key, unique constraint, access pattern, foreign key, or index). \n\n \
\tNote 1: Use the "find Column" command to find the paths of columns in your workspace.\n \
\tNote 2: You can also use tab completion to get a list of the column paths.
RemoveConstraintColumnCommand.COLUMN_REF_REMOVED = The reference to the column at "{0}" has been removed from the table constraint "{1}".
RemoveConstraintColumnCommand.COLUMN_PATH_NOT_FOUND = The specified column path of "{0}" cannot be found in the workspace. Use the "find Column" command to find column paths.
RemoveConstraintColumnCommand.ERROR = Failed to remove column from the constraint.
RemoveConstraintColumnCommand.INVALID_COLUMN_PATH = The path at "{0}" is not a path to a column.
RemoveConstraintColumnCommand.MISSING_COLUMN_PATH_ARG = Please specify the workspace path of the column whose reference you wish to remove from this constraint.

# RenameCommand
RenameCommand.examples= \
\t rename myVdb yourVdb \n \
\t rename myVdb/myDataRole myVdb/yourDataRole \n \
\t mv tableNew tableOld
RenameCommand.usage=rename <object_path> <new_name>
RenameCommand.help=change the name and/or location of an object.
RenameCommand.InvalidArgMsg_ObjectName=Please specify the name of the object to rename.
RenameCommand.InvalidArgMsg_NewName=Please specify the new name of the object.
RenameCommand.ObjectRenamed=Successfully renamed "{0}" to "{1}"
RenameCommand.Failure=FAILED to rename the {0} object.
RenameCommand.cannotRename_wouldCreateDuplicate=Cannot rename to "{0}" - an object with that name already exists.
RenameCommand.cannotRename_objectDoesNotExist = Rename failed because object at path "{0}" does not exist.
RenameCommand.cannotRename_targetContextDoesNotExist = Rename failed because the target location "{0}" does not exist.

# SetCommand
SetCommand.examples= \
\t set property selectable true \n \
\t set property description "This is my description" \n \
\t set property mappedRoleNames admin,user \n \
\t set property mappedRoleNames "admin,guest user,tester" \n \
\t set global RECORDING_FILE /my/output/folder/file.txt \n \
\t set global --reset \n \
\t set record on
SetCommand.help=change workspace object values and system settings. \n\n \
\tNote 1: A value containing one or more spaces should be surrounded by double quotes. \n \
\tNote 2: Multi-valued properties should be comma-separated.
SetCommand.usage= \
set property <property_name> <property_value> [object_path] \n \
\t set global [ (<property_name> <property_value>) | --reset ] \n \
\t set record <on | off>
SetCommand.InvalidArgMsg_SubCommand=Please specify a sub-command (property, global).
SetCommand.InvalidArgMsg_PropertyName=Please specify a property name.
SetCommand.InvalidArgMsg_PropertyValue=Please specify a property value.
SetCommand.InvalidArgMsg_GlobalPropertyName=Please specify a global property name.
SetCommand.InvalidGlobalProperty = Command failed. {0}
SetCommand.PropertySet=Successfully set property {0}.
SetCommand.GlobalPropertySet=Successfully set global property {0}.
SetCommand.resetGlobalProperties = All global properties have been reset to their default values.
SetCommand.InvalidSubCommand=Invalid sub-command, must be ("property", "global")
SetCommand.Failure=FAILED to change the property. {0}
SetCommand.onOffArg_empty=The command arg is empty.
SetCommand.onOffArg_invalid=The command arg must be 'on' or 'off'.
SetCommand.setRecordingStateMsg=Recording set {0} at {1} - File: "{2}"
SetCommand.recordingFileNotSet=The recording file global property has not been specified.
SetCommand.recordingFileNotWriteable=Unable to write to the specified recording file: "{0}"
SetCommand.ADD_TABLE_CONSTRAINT_COLUMN_FAILED = Unable to add column to table constraint. Failed command: {0}
SetCommand.TOO_MANY_ARGS = FAILED to set {0}. Too many arguments were used.

# ShowCommand
ShowCommand.examples= \
\t show properties \n \
\t show children \n \
\t show summary \n \
\t show property description \n \
\t show status \n \
\t show global
ShowCommand.usage=show <summary | properties | children | property | global | status> [command_option]
ShowCommand.help=display various workspace information and status.
ShowCommand.InvalidArgMsg_SubCommand=Please specify a sub-command (properties, children, property, summary, status, global).
ShowCommand.InvalidArgMsg_PropertyName=Please specify a valid property name for the current context.
ShowCommand.InvalidSubCommand=Invalid sub-command, must be "properties", "children", "status", "global", "property", or "summary".
ShowCommand.Failure=Command FAILED. {0}
ShowCommand.NoPropertiesMsg=There are no properties for {0} "{1}".\n
ShowCommand.PropertiesHeader=Properties for {0} "{1}":\n
ShowCommand.PropertyHeader=Property for {0} "{1}":\n
ShowCommand.ChildrenHeader=Children for {0} "{1}":\n
ShowCommand.CurrentRepo   = Current Repository : {0}, Workspace : {1}
ShowCommand.NoCurrentTeiid = Current Teiid Instance  : None set
ShowCommand.CurrentTeiid =Current Teiid Instance  : {0}
ShowCommand.CurrentTeiidJdbc =Current Teiid Instance JDBC  : {0}
ShowCommand.CurrentContext=Current Context : [{0}]
ShowCommand.GlobalPropertiesHeader=Global shell properties:\n
ShowCommand.noChildrenMsg=There are no children for {0} "{1}".
ShowCommand.InvalidArgMsg_PropertyName=Please specify a valid property name for the current context.

# Unset Command
UnsetPropertyCommand.examples= \
\t unset description
UnsetPropertyCommand.usage=unset <property_name>
UnsetPropertyCommand.help=remove a property value from the current object.
UnsetPropertyCommand.error=Failed to unset the property. {0}
UnsetPropertyCommand.missingPropertyName = A property name is required when unsetting a property.
UnsetPropertyCommand.propertyUnset=Successfully unset property "{0}".

# UseTeiidCommand
UseTeiidCommand.examples= \
\t useTeiid testTeiid \n \
\t useTeiid productionTeiid noconnect
UseTeiidCommand.usage=useTeiid <teiid_name> [noconnect]
UseTeiidCommand.help=select a Teiid instance to be used as the default. The command will try and connect unless disabled with the "noconnect" argument.
UseTeiidCommand.invalidName=Command requires a valid teiid name or id
UseTeiidCommand.noInstancesDefined=No teiid instances have been defined in the repository
UseTeiidCommand.teiidSetOk=Teiid '{0}' set as current instance with connection status: {1}
UseTeiidCommand.noTeiidWithName=No teiid instance found that matches the name or id: {0}

# This message have SHELL enum definitions in Messages
SHELL.ERROR_LOADING_PROPERTIES = Error loading startup properties "{0}": {1} 
SHELL.PATH_NOT_FOUND = "** {0} not found **
SHELL.INVALID_GLOBAL_PROPERTY_NAME = "{0}" is not a valid global property name.
SHELL.INVALID_BOOLEAN_GLOBAL_PROPERTY_VALUE = "{0}" is not a valid value for global property "{1}." Enter either a "true" or "false" as the value.
SHELL.PROMPT = [{0}]
SHELL.PROMPT_WITH_TYPE = [{0} ({1})]
SHELL.CHILD_NAME_HEADER = NAME
SHELL.CHILD_TYPE_HEADER = TYPE
SHELL.PROPERTY_NAME_HEADER = NAME
SHELL.PROPERTY_VALUE_HEADER = VALUE
SHELL.NO_PROPERTY_VALUE = <no value>
SHELL.TRANSACTION_COMMIT_ERROR=An error occurred during the commit of transaction {0}
SHELL.TRANSACTION_ROLLBACK_ERROR=An error occurred during the rollback of transaction {0}
SHELL.TRANSACTION_TIMEOUT=Commit of transaction {0} timed out.
SHELL.COMPONENT_STARTED=Started
SHELL.COMPONENT_FAILED=Started
SHELL.ENGINE_STARTING=Starting VDB Builder Engine...
SHELL.LOCAL_REPOSITORY_STARTING=Starting Local Repository initialization ...
SHELL.LOCAL_REPOSITORY_TIMEOUT_ERROR=Error: Timeout awaiting initialization of local repository
SHELL.COMMAND_NOT_FOUND=Command not found.  Try "help" for a list of available commands.
SHELL.GOOD_BYE=Good bye!
SHELL.Help_COMMAND_LIST_MSG=VDB Builder Shell supports the following commands at this workspace context:\n
SHELL.Help_INVALID_COMMAND=No help available: "{0}" is not a valid command.
SHELL.Help_GET_HELP_1=Enter "help" to get a list of available commands or "help <command-name>" for specific information about one command.
SHELL.Help_GET_HELP_2=To execute a specific command, try "<command-name> <args>". Also try entering a tab key for command argument completion help.\n
SHELL.EXITING=Exiting VDB Builder shell due to an error.
SHELL.INVALID_ARG=Invalid argument:  {0}
SHELL.USAGE=Usage:
SHELL.SHUTTING_DOWN=VDB Builder shell shutting down...
SHELL.DONE=done.\n
SHELL.InvalidArgMsg_EntryPath=Please include an entry path (relative archive path).
SHELL.ENTRY_PATH=  Entry Path
SHELL.ENTRY_LIST_SUMMARY=  {0} entries
SHELL.ENTRY=Entry: {0}
SHELL.InvalidArgMsg_ArtifactId=Please specify a valid identifier.
SHELL.InvalidArgMsg_propertiesFile_not_exist=The properties file specified does not exist. Please review the path introduced.
SHELL.InvalidArgMsg_property_not_correct_format=The system property introduced does not have the correct format. Review that contains a pair key value separated by '='.
SHELL.InvalidArgMsg_propertiesFile_error_reading=Has been an error reading the properties file.
SHELL.InvalidArgMsg_propertiesFile_error_reading_line=The line {0} has not correct format and has not been parsed as a property.
SHELL.FileShellCommandReader_NoConsole=User input required, but 'console' is unavailable.
SHELL.WelcomeMessage=\
**********************************************************************\n    \
Welcome to VDB Builder Shell\n\
**********************************************************************\n
SHELL.HelpAliasesHeading = ALIASES
SHELL.HelpNoAliases = None
SHELL.HelpDescriptionHeading = DESCRIPTION
SHELL.HelpDescription = \t{0} - {1}
SHELL.HelpExamplesHeading = EXAMPLES
SHELL.HelpUsageHeading = USAGE
