<?xml version="1.0" encoding="iso-8859-1"?>

<!-- Generates a teiid implementation from the template -->
<project name="generate-teiid-implementation"
				default="generate-teiid">

	<target name="generate-teiid">

		<echo message="Teiid Version: ${teiid.version}"/>

		<!-- Extract the major and minor versions -->
		<ac:propertyregex property="teiid.majmin" input="${teiid.version}"
		              regexp="([0-9][0-9]?)\.([0-9][0-9]?).*"
		              select="\1.\2"
		              casesensitive="false" xmlns:ac="antlib:net.sf.antcontrib"/>

		<!-- Assign the new teiid destination -->
		<property name="teiid.project.name" value="teiid-${teiid.majmin}"/>
		<property name="teiid.destination" value="${destination.dir}/${teiid.project.name}"/>
		<echo message="Teiid Destination: ${teiid.destination}"/>

		<!-- Delete the directory if it already exists -->
		<delete file="${teiid.destination}" quiet="true" failonerror="false"/>

		<!-- Copy the template to the new destination -->
		<copy todir="${teiid.destination}">
			<fileset dir="template"/>
		</copy>

		<!-- Replace the TEIID_TITLE_VERSION placeholder with the major minor version property -->
		<replaceregexp match="%TEIID_TITLE_VERSION%" replace="${teiid.majmin}" flags="g" byline="true">
			<fileset dir="${teiid.destination}"/>
		</replaceregexp>

		<!-- Replace the TEIID_VERSION placeholder with the full version property -->
		<replaceregexp match="%TEIID_VERSION%" replace="${teiid.version}" flags="g" byline="true">
			<fileset dir="${teiid.destination}"/>
		</replaceregexp>

		<echo message="*** Attempting to compile the new module ***"/>
		<exec executable="mvn" dir="${teiid.destination}" resultproperty="mvn.result">
			<arg value="verify"/>
		</exec>
		<echo message=" *** End of module compilation. Result code: ${mvn.result} ***"/>

		<echo/>
		<echo message="*********** IMPORTANT ************"/>
		<echo/>
		<echo message="The module ${teiid.project.name} has been generated at ${teiid.destination}"/>
		<echo/>
		<echo message="To include this module in the build: ${line.separator}
											1. add it to the modules section of ${destination.dir}/pom.xml ${line.separator}
											2. add it to the dependencyManagement section of ${destination.dir}/pom.xml ${line.separator}
											3. add it as a dependency to ${destination.dir}/komodo-plugin-service/pom.xml ${line.separator}"/>
		<echo/>
		<echo message="*********** IMPORTANT ************"/>
		<echo/>
		<echo/>

	</target>

</project>